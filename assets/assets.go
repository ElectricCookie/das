// Code generated by go-bindata.
// sources:
// assets/files/register-de.html
// assets/files/register-en.html
// DO NOT EDIT!

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsFilesRegisterDeHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x5a\xf9\x6e\xdb\x3a\xd6\xff\xbf\x4f\x71\xaa\x0f\xdf\xc5\x4c\x11\xd9\xce\x76\xd1\x3a\xb2\x31\x6e\xa3\xde\x18\x93\x38\x85\xed\xdc\x8b\x62\x30\x18\x50\x12\x6d\x71\x42\x91\x1a\x92\xce\xd2\x22\x6f\x33\x6f\x32\x2f\x36\xa0\x16\x9b\xd4\x62\x3b\xce\xb8\x40\x6c\x91\x87\x87\x67\xe7\xef\x50\xf5\xde\x47\x3c\x54\xcf\x29\x86\x58\x25\x74\xf8\xce\xcb\xbf\x00\xbc\x18\xa3\x48\xff\x00\xf0\x12\xac\x10\x30\x94\xe0\x81\xf3\x40\xf0\x63\xca\x85\x72\x20\xe4\x4c\x61\xa6\x06\xce\x23\x89\x54\x3c\x88\xf0\x03\x09\xb1\x9b\x3d\x38\xd0\x35\x57\xc6\x4a\xa5\x2e\xfe\xd7\x8a\x3c\x0c\x9c\x2f\xf9\x2a\x77\xfe\x9c\x62\x83\x87\xc2\x4f\xaa\xab\xb7\xbe\x80\x30\x46\x42\x62\x35\xb8\x9b\x7f\x75\x3f\x6e\x38\x29\xa2\x28\x1e\xfe\x41\x28\xbd\xe7\x49\x82\x19\xfc\xfc\xd9\xb9\x93\x58\x68\xb1\xe0\xe5\xc5\xeb\xe6\x04\x39\xb1\x54\xcf\xe5\x6f\x80\xee\x07\x70\xf7\xf9\x14\xe4\xfa\xf3\xdb\xf5\xed\xe7\xd1\x35\x4c\xfd\x99\x3f\x9f\x15\xe3\x7b\xf1\x80\x0f\xdd\x82\x9c\x24\x4b\xf8\xb9\x66\x19\x70\x11\x61\xd1\x07\xc6\x19\xbe\x58\x8f\xba\x89\x74\x09\x53\x58\xa4\x9c\x22\x45\x38\x73\x13\x1e\xe1\x3e\x04\x24\x5c\x05\x24\xdc\x10\x26\xe8\x29\xb7\x6c\x1f\x8e\x7b\xbd\xff\xbf\x80\x97\x77\xef\x4a\xc6\xd1\xb3\xb9\x0f\x0a\xef\x97\x82\xaf\x58\xe4\x86\x9c\x72\xd1\x87\xff\x5b\xfc\xaa\xff\x6d\x78\x2d\x38\x53\xee\x02\x25\x84\x3e\xf7\x41\x22\x26\x5d\x89\x05\x59\x18\x52\x3d\xe2\xe0\x9e\x28\x37\x23\x94\x09\xe7\x2a\x26\x6c\xd9\x07\xc4\x14\x41\x94\x20\x89\xa3\x0a\x37\x49\x7e\xe0\x3e\x1c\x9f\xa5\x4f\x9b\x09\x4a\x18\x76\x63\x4c\x96\xb1\xea\xc3\x71\xe7\xcc\x54\x46\x2c\x09\xeb\x43\x6f\x33\x94\xa2\x28\xca\xf6\xe8\x5d\x80\x65\x1d\x1d\x17\x19\x7b\x17\x45\xff\x5c\x49\x55\xe8\x5f\x93\xb5\x85\x6e\x63\x27\x85\x02\x8a\x6b\x0e\xd1\x46\xa2\x28\x95\xb8\x0f\x12\xa7\x48\x20\x65\x78\x27\x91\xdc\xcd\x96\xb9\x54\xa6\x28\xc4\x7d\xe8\xa5\xaa\x69\x5a\x34\x4d\x57\xdc\x55\x0e\xe7\x72\xa8\xc8\x10\x65\x0f\x97\x6c\xb1\x33\xc0\x03\x16\x8a\x84\x88\xba\x88\x92\x25\xeb\x83\xe2\xa9\xa1\xf8\x01\xd1\xff\xf9\xf6\xf2\x3b\xfc\x02\x5f\x6e\x27\xf3\xd1\x78\xe2\x4f\x5f\x9b\x00\x05\x7d\xe7\xf5\xb1\xd9\x1c\xe3\xdd\x0f\x30\xc3\x0a\xd0\x26\x0d\x8e\x00\xb1\x08\x12\x74\x8f\x81\x28\x88\x88\x4c\x29\x7a\x06\x24\x21\xa0\x3c\xbc\x07\xc9\xf5\xf0\x23\xa1\x14\xd0\x4a\xf1\x04\x65\xf6\xa1\xcf\x20\x95\xc0\x2a\x8c\x41\x71\x50\x31\x52\x50\x30\x0b\x56\x25\x35\x95\x1c\x64\x2c\x08\xbb\x87\x88\x3f\x32\xe0\x0c\x10\xa4\x31\x67\x18\xb8\x00\xc9\x13\x9c\x25\xc3\x26\xcd\x3b\xba\x84\x21\xc2\xb0\x30\x34\x2d\x04\xea\xe7\xe2\x6c\xd4\xbb\x29\x23\x3f\x13\x0b\xde\x93\x44\x97\x52\xc4\x8c\xb0\xe9\x7e\xc8\xd4\x92\x5a\x81\x10\xeb\xda\x80\xa3\xcd\x6e\x56\x25\x38\xff\xd8\x33\x03\x61\x9d\x43\xc7\xd6\xb0\x45\x6c\xd9\x74\x1e\x13\x09\x32\xe6\x2b\x1a\xe5\x8a\x07\x18\x50\x61\x41\x4c\x71\x82\x99\x3a\xd2\xa6\xcc\x2c\x55\xda\x73\xa1\xff\x68\xff\x00\x5f\x80\x8a\xb1\x69\x00\xdb\x28\x98\x29\x2b\xdf\x9e\x74\xf8\x66\x02\x16\xb9\x17\x70\x43\xcc\xfd\x4c\xd6\x58\x11\xb7\xda\xe1\x4d\x89\x70\xe5\x8f\x2e\xfd\xe9\x11\x7c\xbd\xbd\x9d\xeb\xef\x9b\xd1\x78\x72\xd8\x69\xd0\x49\x10\x61\x8d\xb9\xa0\xb3\x60\x61\xa4\x7a\x61\x1c\x81\x22\xb2\x92\x7d\x38\x6d\xf0\x65\x25\x3d\x3a\x8f\x02\xa5\xa9\x15\x80\xbb\xac\xbd\xb6\xd1\x89\x6d\xa3\xce\x82\x73\x65\x71\x0a\x29\x46\x42\x33\x51\x71\x6d\xb9\xab\x78\x5a\x0d\xb7\xac\x10\x17\x85\x28\x8f\xdf\x9d\x25\xb1\xdc\x54\x45\x47\xb5\xb1\xb4\x3e\x24\x53\xc4\xea\xa3\xc8\x2a\xa8\x65\x7d\xf9\x94\x7d\xda\xea\xe8\x89\x5d\x47\x1b\x44\x7f\x53\xf4\xcc\xbf\x7f\xbb\xfd\x6d\x3a\xfa\x76\xf5\xfd\xb0\x98\x89\x8f\x4b\x35\xe3\x93\xf5\xaf\xd3\xf5\xaf\x33\xd3\x4b\x85\xbe\xbd\xec\xf3\x8a\xb3\x3e\x23\x78\x2c\x4e\xe9\x33\x73\xe9\xab\xce\xef\x3c\x4b\xdd\x80\x2b\xc5\x93\x3e\x9c\xda\x51\x15\x1f\x1b\xa2\x1a\x0e\x38\x3d\x37\x1d\x60\x89\x72\x6a\x8a\xb2\x2d\xa6\xb2\x39\x25\x10\x93\x0b\x2e\x92\x3e\x84\x28\x25\x0a\x51\xf2\x03\x1b\x02\xac\xa3\x68\x45\xcb\x5f\x9c\x56\x65\xda\x69\xa6\xa6\xd3\xd7\x12\x9a\x71\x91\x20\xfa\x1a\x43\x1d\x9f\xe7\x86\x2a\xa7\x53\xa0\x64\x13\xdb\x2b\x6a\x3d\x72\xfd\x68\x85\x39\x25\x52\xb9\x19\xd6\x75\x53\x2e\x89\x46\x90\x7d\x20\x4c\x92\x08\x9b\x81\x9d\xcb\xe1\x52\xbc\x50\x7d\x38\xb7\x5c\x83\x1a\x82\xe8\xf4\xec\xd3\xc7\x28\xa8\x98\x38\xc2\x21\x17\x28\xdf\x61\xc5\x22\x2c\x74\x7c\xbc\x11\x66\xdc\xcd\xe7\xb7\x93\x03\xe1\x75\x27\x50\xec\x15\x05\xaf\xad\xf4\x68\x2e\x43\x50\x19\x52\x19\x82\x12\xfa\x8f\x8d\xcd\xca\x5a\xd7\xe6\xb2\x8c\x45\x15\x5d\xae\x37\xcc\x0e\xad\x66\xea\xca\x3e\x4d\xe8\x28\xfb\x98\x9e\xac\x1c\x0e\xe7\xfb\x14\x30\x6b\x6b\x74\xe8\x9e\x7d\x90\x9c\x92\x08\x8e\xd3\xa7\x7a\x84\xec\x12\x6c\x97\x77\xda\x63\x0f\x20\x5c\x09\xa9\xa7\x52\x4e\xec\xcc\x37\x30\x03\x61\x59\xb5\xaa\x40\x87\xad\xa0\xd9\x4a\xdc\x80\xd3\xa8\x9e\x30\x56\xe2\x9a\xb8\xe2\x24\x7d\x82\x93\x26\xdb\x9b\x49\x62\x77\x7a\x7b\x16\x2a\xed\x23\x37\x15\x24\x41\xe2\xb9\x29\x4c\x1a\x1c\x56\x58\xac\x85\x07\xda\x6b\x71\x43\x57\xd4\x38\x5d\x09\x92\x37\x65\xff\xed\xfc\xca\x9f\xc2\x6c\xfe\xfd\xda\x9f\xc1\xfc\x6a\x34\x87\x9b\xf1\x6f\x57\x73\xf8\xec\xc3\xdd\xcc\xff\x7a\x77\x7d\x60\x5d\xa0\x48\x9a\xb8\x33\xb1\x0b\x6e\xcf\x02\x3b\x44\x34\xd1\x66\xa8\xc6\x22\xcc\x72\xca\xcd\x53\xca\xa0\xdf\x0a\x18\x8a\x45\x42\x47\x58\xcb\x9a\x6c\xae\xbe\x44\xd7\xe9\x96\x15\x7a\xca\x5c\x90\xa1\xb3\x16\xb4\x66\x90\x25\xaa\xb7\x8f\x9a\x49\xd0\x40\xd6\x68\xb9\x54\xe0\x18\xa3\xc8\x46\x8a\x79\x70\x64\x21\x9e\x22\x81\xcd\xae\x66\x9d\xa9\x76\x56\x94\xf0\xa2\x67\xe3\xfa\x96\xe1\xa2\xa4\x1a\xa3\x3c\x45\x21\x51\xcf\xf6\xd8\x03\x16\x0b\xca\x1f\xfb\x10\x93\x28\xc2\xcc\x6e\xd8\x63\x12\xe1\x3e\x20\x6a\x9c\xd2\x0f\x44\x92\x80\xd0\x8c\x4f\x75\xc9\x7a\x4b\x53\x77\xfe\xa8\x9b\x32\x37\xb0\xb3\xab\xb9\x00\x18\x20\x48\x34\x5c\x07\xf5\x6a\xa9\xb7\x3e\x66\xd2\xa7\xa2\xe2\xd6\x9a\xe4\xb2\x25\xd2\xd8\xdd\x12\xed\x80\x2c\x9c\xfa\xb3\x6f\xb7\x93\xd9\xf8\x77\x1f\x46\x93\x4b\xb8\xb9\xfd\x3c\xbe\xf6\xe1\xeb\x74\xec\x4f\x2e\xaf\xbf\x17\xe9\x79\x58\x26\xfe\x25\xc1\x11\x41\xc0\x99\xee\xbb\x43\x81\x31\xcb\x9a\xf6\x3f\x19\xae\xfc\x55\xab\xf0\x67\xd3\x88\xba\xe4\xfd\x2d\xa4\x48\xca\x81\x3e\x93\xff\x6e\x63\x47\xab\xa2\x9f\x7c\x4c\x9f\x1a\x5b\xe8\x5a\xe8\xea\x0e\xc5\xa4\xac\x5e\xc7\x58\x1b\x1a\x1d\x47\x7d\x72\x83\x1f\x9b\x66\xf9\xd6\x59\xb3\xbd\xa9\xcf\xda\x5d\x4d\x7d\x1e\xb5\x99\xe1\xf8\xd7\x57\x28\x57\xb6\x8a\xdb\x76\xea\x20\xa1\x48\x58\x81\x33\x56\x53\xbd\xff\x76\xf5\x7b\x00\xf3\xae\xef\x75\x7c\xaa\x97\x2c\x6d\x9c\xea\x20\x2c\xbb\xae\xd8\x7b\xaf\x4a\xa7\xbe\xce\x4c\x5d\x7b\xd7\x35\xa8\x65\xc3\x0a\x0c\xda\x45\xa6\xcb\x5c\x23\xcb\xed\x12\x6e\x45\x9c\xaf\x53\xb6\x8e\x09\x0f\x62\x43\x92\xa5\x2b\xb0\x4c\x39\x93\xe4\xc1\x16\xab\x2c\xe6\xad\x37\x5e\xb5\xdb\xed\xed\xce\xac\xf2\x81\x97\xb7\xd4\xbf\x6f\x53\x7f\xe6\x4f\x7f\xf7\x61\x7e\xe5\xcf\xfc\x12\x8e\x8c\x27\xfa\x39\xbb\xfe\x79\x53\xed\x43\xd4\xec\x32\x3b\xfe\x93\xc2\x82\x21\xfa\x45\x9b\xae\xcd\xe8\x16\x64\xb7\x56\x1c\xb5\x71\x4a\x5b\x67\x2a\x77\x25\xf6\xa4\x2e\x22\xad\x93\xd6\x65\x8c\x3d\x15\x91\x87\x4a\x17\x6a\xde\x14\x54\x55\x40\x69\x4a\xb1\x4b\x09\xbb\x6f\xbe\xa3\x21\x2c\xc6\x82\xa8\x16\xa7\x5b\x9d\xf9\x1e\xa4\x79\x4d\xdc\x83\xb0\x84\xfe\xdb\x49\x2d\xd5\xb6\x93\x36\x9e\xff\x76\xa0\x82\xd5\x8b\xd5\x70\x7e\x3f\xd6\xd8\x65\x57\x83\x76\x7a\x76\xf6\xe9\x1c\xb7\xa4\xa6\x8d\xfd\x0f\x65\x58\xaf\x54\xdb\x36\x2f\xf1\x87\xd7\x5d\xbf\x75\xf3\xba\xe5\xcb\x43\x2f\xeb\xac\xf3\x5a\xe1\x38\xe5\xab\xbc\x4c\xe1\x9c\xf5\xc0\xe9\x39\x10\x62\x4a\x8b\x62\xbe\x7e\x96\x1a\xdb\x95\xcf\xf9\x7a\xcd\xcb\x29\xdf\xea\x79\x4a\x0c\xd7\x82\x7a\x2a\x1a\xfe\xc2\x02\x99\x5e\x78\x5d\x15\x59\xe3\xe5\xe2\xf5\x11\xe2\x0c\x0d\xfd\x3c\x1d\xcc\x06\x05\x66\xca\x19\xbe\x33\x08\x00\xbc\xf7\xae\x0b\xb3\xf9\x68\x3a\x87\x2f\xfe\x64\xee\x4f\xfd\x4b\xf8\xe3\x6a\x3c\xf7\x37\x2f\x48\xc0\x75\x87\xf6\x1a\x9d\x78\x25\xdf\x35\x58\x76\x86\x9f\x89\x52\x18\x02\x2c\xd5\x2f\x68\x95\xd0\x0b\x45\x96\x98\xc1\x8c\x60\x18\xc7\x02\x83\xef\xde\x20\x42\x61\x14\x09\x2c\x25\xf6\xba\x9a\x4b\x85\x71\x6e\xbb\x82\xb3\x3e\xaa\xaa\xe2\x5a\x02\xdf\x8c\xc6\x93\x4c\x4c\x7f\x32\x87\xd1\xd4\x1f\xd5\x24\xad\x18\xb2\xc1\x70\x05\x64\x70\xea\x44\x07\xb8\xb2\x89\x49\x8b\x08\x1b\xcf\xb6\x4c\x01\x78\x24\x59\x82\x14\xe1\xc0\xe9\x74\xba\x9d\x4e\x97\xf2\x25\xef\xa4\x6c\xe9\xe4\x05\x75\xe0\x7c\xea\xa5\x4f\x0e\x64\x71\xa9\xad\x95\xe3\xe6\x53\x0d\x61\xb2\x8b\x99\xca\x4b\x87\xf5\xcb\xe6\xc6\xbd\xd2\xe1\x15\xa2\x94\xc3\xcf\x9f\xd0\xf9\xaa\x3b\xc7\x49\xfe\xe6\xf9\xc8\xeb\xa6\x5b\x97\x19\xef\xac\x03\x4c\xe0\x72\x34\x73\xbf\xdc\xcc\xde\xc3\x5d\xa2\xbd\x0e\x7f\xe5\x4c\x71\x58\x08\x4c\x7e\xac\x64\x18\x23\xaa\x32\x42\xa9\xfe\xf3\xef\x4d\x78\x04\x59\xe0\x34\x04\x49\x67\xfb\xee\x07\xa7\x9a\x62\x60\xd4\x92\x16\xbf\x95\x9b\xe8\xc4\xdc\x46\xb1\xd5\xc3\x1b\x92\x08\xb2\x36\x77\xe0\x68\xa8\xb5\x75\xcb\x03\xb5\xdb\xcd\x72\x3f\x6d\x5e\xa1\x95\xa1\xdd\x10\x3c\x04\xb1\xc0\x8b\x81\xa3\x63\xc8\x4f\x10\xa1\xbf\x63\x41\x16\xcf\x73\x7e\x8f\x19\xbc\xbc\x38\xa0\x90\x58\x62\x35\x70\xfe\x11\x50\xc4\xee\x9d\x61\xc5\xdb\x56\x5c\x78\x5d\x34\x04\xbb\xde\x6d\x95\xa0\xbb\x9f\xb4\x5e\x77\x4f\x0b\x78\xdd\xcc\xfe\x3b\xfd\xba\x53\xc2\x5d\x92\xed\x94\x68\x87\x24\xed\x12\xb4\xed\xdc\xca\xb0\x89\x55\xce\xa4\xa9\x08\xfb\xba\xa5\xde\xa7\x04\x97\xdb\xb5\x1d\x3c\xf9\x0b\xc8\xfa\x31\x63\x9c\x5e\xf9\x7b\xb0\x5a\x88\xff\x0f\x72\xa4\x25\xca\x2b\x67\x2b\x66\x2a\xbf\x80\x6d\xab\xf1\xe6\x91\xb8\x01\x85\xce\xb0\xa8\x87\xe0\x42\xc8\x59\x82\x96\xb2\x13\xf2\xa4\x1b\x21\xd9\x74\xfe\xad\xb9\x05\x62\x08\x37\x38\x16\x30\x66\x0b\x2e\x92\x0c\x73\xe9\x9c\x28\x33\xcc\xe4\x45\x92\x54\x10\x7d\xb0\x8f\x93\x54\xa7\xd1\x2a\xd1\xa9\xd3\x69\xf6\x7b\x43\xa4\x34\x45\x49\x63\x84\x78\xdd\x88\x3c\x34\x79\x51\x07\x42\x8b\x0f\xdf\xad\x09\xb6\xa1\x8b\x82\x73\xb3\x9c\xcd\xe8\x67\x23\xb5\x21\xab\xd7\xcd\x33\xc9\xeb\xe6\xff\xcf\xeb\xbf\x01\x00\x00\xff\xff\x27\x1e\x09\x11\xff\x25\x00\x00")

func assetsFilesRegisterDeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsFilesRegisterDeHtml,
		"assets/files/register-de.html",
	)
}

func assetsFilesRegisterDeHtml() (*asset, error) {
	bytes, err := assetsFilesRegisterDeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/files/register-de.html", size: 9727, mode: os.FileMode(438), modTime: time.Unix(1492193016, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsFilesRegisterEnHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x5a\xfb\x6e\xdb\x38\xd6\xff\xbf\x4f\x71\xaa\x0f\xdf\xec\x6e\x11\x59\xce\x6d\xd0\xaa\xb2\xb1\x6e\xa3\x36\x01\x12\xa7\xb0\xdd\x0e\x8a\xc5\x62\x41\x4b\xb4\xc5\x0d\x45\x6a\x49\x3a\x97\x29\xf2\xee\x0b\xea\x62\x93\xba\xd8\x8e\xb3\x1e\xa0\xb1\xc9\xc3\xc3\x73\xe7\xef\x90\x13\xbc\x8d\x79\xa4\x9e\x32\x0c\x89\x4a\xe9\xf0\x4d\x50\xfc\x01\x08\x12\x8c\x62\xfd\x05\x20\x48\xb1\x42\xc0\x50\x8a\x07\xce\x3d\xc1\x0f\x19\x17\xca\x81\x88\x33\x85\x99\x1a\x38\x0f\x24\x56\xc9\x20\xc6\xf7\x24\xc2\x6e\xfe\xc3\x01\xcf\x5c\x99\x28\x95\xb9\xf8\x3f\x2b\x72\x3f\x70\x3e\x17\xab\xdc\xd9\x53\x86\x0d\x1e\x0a\x3f\x2a\x4f\x6f\xfd\x11\xa2\x04\x09\x89\xd5\xe0\xfb\xec\x8b\xfb\x7e\xc3\x49\x11\x45\xf1\xf0\x0f\x4c\x23\x9e\x62\xf8\xf5\xab\xf7\x5d\x62\xa1\x65\x82\xe7\xe7\xc0\x2b\x66\x0b\x4a\xa9\x9e\xaa\xef\x00\xde\x3b\x70\xf7\xf9\x94\xe4\xfa\xf3\xf5\xfa\xf6\xd3\xe8\x1a\x26\xe1\x34\x9c\x4d\xcb\xf1\xbd\x78\xc0\x3b\xaf\x24\x27\xe9\x12\x7e\xad\x59\xce\xb9\x88\xb1\xf0\x81\x71\x86\x3f\xae\x47\xdd\x54\xba\x84\x29\x2c\x32\x4e\x91\x22\x9c\xb9\x29\x8f\xb1\x0f\x73\x12\xad\xe6\x24\xda\x10\xa6\xe8\xb1\x30\xab\x0f\xc7\xfd\xfe\xff\x7f\x84\xe7\x37\x6f\x2a\xc6\xf1\x93\xb9\x0f\x8a\xee\x96\x82\xaf\x58\xec\x46\x9c\x72\xe1\xc3\xff\x2d\x7e\xd7\xff\x6d\x78\x2d\x38\x53\xee\x02\xa5\x84\x3e\xf9\x20\x11\x93\xae\xc4\x82\x2c\x0c\xa9\x1e\xf0\xfc\x8e\x28\x37\x27\x94\x29\xe7\x2a\x21\x6c\xe9\x03\x62\x8a\x20\x4a\x90\xc4\x71\x8d\x9b\x24\x7f\x62\x1f\x8e\xcf\xb2\xc7\xcd\x04\x25\x0c\xbb\x09\x26\xcb\x44\xf9\x70\xdc\x3b\x33\x95\x11\x4b\xc2\x7c\xe8\x6f\x86\x32\x14\xc7\xf9\x1e\xfd\x8f\x60\x59\x47\x07\x45\xce\xde\x45\xf1\xbf\x57\x52\x95\xfa\x37\x64\xed\xa0\xdb\xd8\x49\xa1\x39\xc5\x0d\x87\x68\x23\x51\x94\x49\xec\x83\xc4\x19\x12\x48\x19\xde\x49\x25\x77\xf3\x65\x2e\x95\x19\x8a\xb0\x0f\xfd\x4c\xb5\x4d\x8b\xb6\xe9\x9a\xbb\xaa\xe1\x42\x0e\x15\x1b\xa2\xec\xe1\x92\x2d\x76\x06\xb8\xc7\x42\x91\x08\x51\x17\x51\xb2\x64\x3e\x28\x9e\x19\x8a\x1f\x10\xfd\x9f\x6e\x2f\x7e\xc2\x6f\xf0\xf9\x76\x3c\x1b\x5d\x8d\xc3\xc9\x4b\x13\xa0\xa4\xef\xbd\x3c\x36\xdb\x63\xdc\x7b\x07\x53\xac\x00\x6d\xd2\xe0\x08\x10\x8b\x21\x45\x77\x18\x88\x82\x98\xc8\x8c\xa2\x27\x40\x12\xe6\x94\x47\x77\x20\xb9\x1e\x7e\x20\x94\x02\x5a\x29\x9e\xa2\xdc\x3e\xf4\x09\xa4\x12\x58\x45\x09\x28\x0e\x2a\x41\x0a\x4a\x66\xf3\x55\x45\x4d\x25\x07\x99\x08\xc2\xee\x20\xe6\x0f\x0c\x38\x03\x04\x59\xc2\x19\x06\x2e\x40\xf2\x14\xe7\xc9\xb0\x49\xf3\x9e\xae\x5f\x88\x30\x2c\x0c\x4d\x4b\x81\xfc\x42\x9c\x8d\x7a\x37\x55\xe4\xe7\x62\xc1\x5b\x92\xea\x3a\x8a\x98\x11\x36\xde\xbb\x5c\x2d\xa9\x15\x88\xb0\xae\x0d\x38\xde\xec\x66\x55\x82\xf3\xf7\x7d\x33\x10\xd6\x39\x74\x6c\x0d\x5b\xc4\x96\x4d\x67\x09\x91\x20\x13\xbe\xa2\x71\xa1\xf8\x1c\x03\x2a\x2d\x88\x29\x4e\x31\x53\x47\xda\x94\xb9\xa5\x2a\x7b\x2e\xf4\x3f\xda\x3f\xc0\x17\xa0\x12\x6c\x1a\xc0\x36\x0a\x66\xca\xca\xb7\x47\x1d\xbe\xb9\x80\x65\xee\xcd\xb9\x21\xe6\x7e\x26\x6b\xad\x88\x5b\xed\xf0\xaa\x44\xb8\x0c\x47\x17\xe1\xe4\x08\xbe\xdc\xde\xce\xf4\xdf\x9b\xd1\xd5\xf8\xb0\xd3\xa0\x97\x22\xc2\x5a\x73\x41\x67\xc1\xc2\x48\xf5\xd2\x38\x02\xc5\x64\x25\x7d\x38\x6d\xf1\x65\x2d\x3d\x7a\x0f\x02\x65\x99\x15\x80\xbb\xac\xbd\xb6\xd1\x89\x6d\xa3\xde\x82\x73\x65\x71\x8a\x28\x46\x42\x33\x51\x49\x63\xb9\xab\x78\x56\x0f\xb7\xbc\x10\x97\x85\xa8\x88\xdf\x9d\x25\xb1\xda\x54\xc5\x47\x8d\xb1\xac\x39\x24\x33\xc4\x9a\xa3\xc8\x2a\xa8\x55\x7d\xf9\x90\x7f\xba\xea\xe8\x89\x5d\x47\x5b\x44\x7f\x55\xf4\xcc\x7e\x7e\xbb\xfd\x3a\x19\x7d\xbb\xfc\x79\x58\xcc\x24\xc7\x95\x9a\xc9\xc9\xfa\xdb\xe9\xfa\xdb\x99\xe9\xa5\x52\xdf\x7e\xfe\x79\xc1\x59\x9f\x13\x3c\x94\xa7\xf4\x99\xb9\xf4\x45\xe7\x77\x91\xa5\xee\x9c\x2b\xc5\x53\x1f\x4e\xed\xa8\x4a\x8e\x0d\x51\x0d\x07\x9c\x9e\x9b\x0e\xb0\x44\x39\x35\x45\xd9\x16\x53\xf9\x9c\x12\x88\xc9\x05\x17\xa9\x0f\x11\xca\x88\x42\x94\xfc\x89\x0d\x01\xd6\x51\xb4\xa2\xd5\x37\x4e\xeb\x32\xed\x34\x53\xdb\xe9\x6b\x09\xcd\xb8\x48\x11\x7d\x89\xa1\x8e\xcf\x0b\x43\x55\xd3\x19\x50\xb2\x89\xed\x15\xb5\x7e\x72\xfd\xd3\x0a\x73\x4a\xa4\x72\x73\xac\xeb\x66\x5c\x12\x8d\x20\x7d\x20\x4c\x92\x18\x9b\x81\x5d\xc8\xe1\x52\xbc\x50\x3e\x9c\x5b\xae\x41\x2d\x41\x74\x7a\xf6\xe1\x7d\x3c\xaf\x99\x38\xc6\x11\x17\xa8\xd8\x61\xc5\x62\x2c\x74\x7c\xbc\x12\x66\x7c\x9f\xcd\x6e\xc7\x07\xc2\xeb\xde\x5c\xb1\x17\x14\xbc\xae\xd2\xa3\xb9\x0c\x41\xe5\x48\x65\x08\x4a\xe8\x7f\x6c\x6c\x56\xd5\xba\x2e\x97\xe5\x2c\xea\xe8\x72\xbd\x61\x7e\x68\xb5\x53\xd7\xf6\x69\x43\x47\xf9\xc7\xf4\x64\xed\x70\x38\xdf\xa7\x80\x59\x5b\xa3\x43\xf7\xf4\x41\x72\x4a\x62\x38\xce\x1e\x9b\x11\xb2\x4b\xb0\x5d\xde\xe9\x8e\x3d\x80\x68\x25\xa4\x9e\xca\x38\xb1\x33\xdf\xc0\x0c\x84\xe5\xd5\xaa\x06\x1d\xb6\x82\x66\x2b\x71\xe7\x9c\xc6\xcd\x84\xb1\x12\xd7\xc4\x15\x27\xd9\x23\x9c\xb4\xd9\xde\x4c\x12\xbb\xd3\xdb\xb3\x50\x69\x1f\xb9\x99\x20\x29\x12\x4f\x6d\x61\xd2\xe2\xb0\xd2\x62\x1d\x3c\xd0\x5e\x8b\x5b\xba\xa2\xd6\xe9\x5a\x90\xbc\x2a\xfb\x6f\x67\x97\xe1\x04\xa6\xb3\x9f\xd7\xe1\x14\x66\x97\xa3\x19\xdc\x5c\x7d\xbd\x9c\xc1\xa7\x10\xbe\x4f\xc3\x2f\xdf\xaf\x0f\xac\x0b\x14\x49\x13\x77\xa6\x76\xc1\xed\x5b\x60\x87\x88\x36\xda\x1c\xd5\x58\x84\x79\x4e\xb9\x45\x4a\x19\xf4\x5b\x01\x43\xb9\x48\xe8\x08\xeb\x58\x93\xcf\x35\x97\xe8\x3a\xdd\xb1\x42\x4f\x99\x0b\x72\x74\xd6\x81\xd6\x0c\xb2\x54\xf5\xf7\x51\x33\x9d\xb7\x90\xb5\x5a\x2e\x13\x38\xc1\x28\xb6\x91\x62\x11\x1c\x79\x88\x67\x48\x60\xb3\xab\x59\x67\xaa\x9d\x15\x15\xbc\xe8\xdb\xb8\xbe\x63\xb8\x2c\xa9\xc6\x28\xcf\x50\x44\xd4\x93\x3d\x76\x8f\xc5\x82\xf2\x07\x1f\x12\x12\xc7\x98\xd9\x0d\x7b\x42\x62\xec\x03\xa2\xc6\x29\x7d\x4f\x24\x99\x13\x9a\xf3\xa9\x2f\x59\x6f\x69\xea\xce\x1f\x74\x53\xe6\xce\xed\xec\x6a\x2f\x00\x06\x08\x12\x2d\xd7\x41\xfd\x46\xea\xad\x8f\x99\xec\xb1\xac\xb8\x8d\x26\xb9\x6a\x89\x34\x76\xb7\x44\x3b\x20\x0b\x27\xe1\xf4\xdb\xed\x78\x7a\xf5\x23\x84\xd1\xf8\x02\x6e\x6e\x3f\x5d\x5d\x87\xf0\x65\x72\x15\x8e\x2f\xae\x7f\x96\xe9\x79\x58\x26\xfe\x3d\xc5\x31\x41\xc0\x99\xee\xbb\x23\x81\x31\xcb\x9b\xf6\xbf\x1a\xae\xfc\x5d\xab\xf0\x37\xd3\x88\xba\xe4\xfd\x23\xa2\x48\xca\x81\x3e\x93\xff\x69\x63\x47\xab\xa2\x9f\xbc\xcf\x1e\x5b\x5b\xe8\x46\xe8\xea\x0e\xc5\xa4\xac\x5f\xc7\x58\x1b\x1a\x1d\x47\x73\x72\x83\x1f\xdb\x66\xf9\xd6\x59\xb3\xbd\x69\xce\xda\x5d\x4d\x73\x1e\x75\x99\xe1\xf8\xf7\x17\x28\x57\xb5\x8a\xdb\x76\xea\x21\xa1\x48\x54\x83\x33\x56\x53\xbd\xff\x76\xcd\x7b\x00\xf3\xae\xef\x65\x7c\xea\x97\x2c\x5d\x9c\x9a\x20\x2c\xbf\xae\xd8\x7b\xaf\x5a\xa7\xbe\xce\x4c\x5d\x7b\xd7\x35\xa8\x63\xc3\x1a\x0c\xda\x45\xa6\xcb\x5c\x2b\xcb\xed\x12\x6e\x45\x9c\x2f\x53\xb6\x89\x09\x0f\x62\x43\xd2\xa5\x2b\xb0\xcc\x38\x93\xe4\xde\x16\xab\x2a\xe6\x9d\x37\x5e\x8d\xdb\xed\xed\xce\xac\xf3\x81\xe7\xd7\xd4\xbf\x6f\x93\x70\x1a\x4e\x7e\x84\x30\xbb\x0c\xa7\x61\x05\x47\xae\xc6\xfa\x77\x7e\xfd\xf3\xaa\xda\x87\xa8\xd9\x65\xf6\xc2\x47\x85\x05\x43\xf4\xb3\x36\x5d\x97\xd1\x2d\xc8\x6e\xad\x38\xea\xe2\x94\x75\xce\xd4\xee\x4a\xec\x49\x5d\x44\x3a\x27\xad\xcb\x18\x7b\x2a\x26\xf7\xb5\x2e\xd4\xbc\x29\xa8\xab\x80\xb2\x8c\x62\x97\x12\x76\xd7\x7e\x47\x43\x58\x82\x05\x51\x1d\x4e\xb7\x3a\xf3\x3d\x48\x8b\x9a\xb8\x07\x61\x05\xfd\xb7\x93\x5a\xaa\x6d\x27\x6d\x3d\xff\xed\x40\x05\xab\x17\x6b\xe0\x7c\x3f\xd1\xd8\x65\x57\x83\x76\x7a\x76\xf6\xe1\x1c\x77\xa4\xa6\x8d\xfd\x0f\x65\xd8\xac\x54\xdb\x36\xaf\xf0\x47\xe0\xad\x5f\xdd\x02\xaf\x7a\x39\x0c\xf2\xce\xba\xa8\x15\x8e\x53\xbd\xe3\xe5\x0a\x17\xac\x07\x4e\xdf\x81\x08\x53\x5a\x16\xf3\xf5\x6f\xa9\xb1\x5d\xf5\xbb\x58\xaf\x79\x39\xd5\xab\x5e\xa0\xc4\x70\x2d\x68\xa0\xe2\xe1\x6f\x6c\x2e\xb3\x8f\x81\xa7\x62\x6b\xbc\x5a\xbc\x3e\x42\x9c\xa1\xa1\x5f\xa0\x83\xd9\xa0\xc0\x4c\x39\xc3\x37\x06\x01\x40\xf0\xd6\x75\x61\x3a\x1b\x4d\x66\xf0\x39\x1c\xcf\xc2\x49\x78\x01\x7f\x5c\x5e\xcd\xc2\xcd\x03\x09\xb8\xee\xd0\x5e\xa3\x13\xaf\xe2\xbb\x06\xcb\xce\xf0\x1b\xc5\x48\x62\xb8\xc7\x82\x2c\x9e\xe0\x89\xaf\x04\xe0\x14\x11\x0a\x28\x8e\x05\x96\x32\xf0\xf4\xc2\x1a\xaf\xc2\x5c\x25\x33\x7d\x3a\xd5\x25\xb4\x64\xbc\x19\x5d\x8d\x73\xc9\xc2\xf1\x0c\x46\x93\x70\xd4\x10\xae\x66\xbb\x16\x5b\x95\x28\xc1\x69\x12\x1d\xe0\xbd\x36\x26\x1d\x22\x6c\x9c\xd9\x31\x05\x10\x90\x74\x09\x52\x44\x03\xa7\xd7\xf3\x7a\x3d\x8f\xf2\x25\xef\x65\x6c\xe9\x14\x35\x74\xe0\x7c\xe8\x67\x8f\x0e\xe4\xa1\xa8\xad\x55\x40\xe5\x53\x8d\x5a\xf2\xbb\x98\xda\x3b\xc3\xfa\x71\xb9\x75\xaf\xcc\x78\x6c\x86\xde\x17\xdd\x2e\x8e\x8b\xe7\xe6\xa3\xc0\xcb\x76\x2c\xfc\x8b\xc0\xb0\xa4\x28\xd6\x6e\x06\x81\x97\x44\x16\x8f\x39\x0b\x2e\xe0\x62\x34\x75\x3f\xdf\x4c\xdf\x42\x19\x10\x11\x25\xd1\x5d\xfe\x9c\x92\x17\xca\x39\xa6\xfc\x01\x14\x87\x88\xb3\x05\x11\x69\x6b\xa4\x6c\xdb\xff\xe0\x0c\x53\x0c\x8c\x12\xd2\xe1\xbb\x6a\x13\x9d\x8f\xdb\x28\xb6\x7a\x79\x43\x12\x43\xde\xdd\x0e\x1c\x8d\xb0\xb6\x6e\x79\xa0\x76\xbb\x59\xee\xa7\xcd\x0b\xb4\x32\xb4\x1b\x42\x80\x20\x11\x78\x31\x70\x74\x14\x85\xda\x8b\x3f\xf2\x02\x30\xe3\x77\x98\xc1\xf3\xb3\x03\x0a\x89\x25\x56\x03\xe7\x5f\x73\x8a\xd8\x9d\x33\x84\x82\xc0\x76\x39\x04\x1e\x1a\x82\x5d\xe0\xb6\xee\xed\xed\x27\x67\xe0\xed\xa9\x7b\xe0\xe5\x96\xdf\xe9\xd1\x9d\x12\xee\x92\x6c\xa7\x44\x3b\x24\xe9\x96\xa0\x6b\xe7\x4e\x86\x6d\xac\x0a\x26\x6d\x25\x38\xd4\x3d\xf4\x3e\x05\xb8\xda\xae\xeb\xa4\x29\x5e\x1c\x9b\xe7\x8a\x71\x5c\x15\x0f\x5f\x8d\xe0\xfe\x1f\x64\x47\x47\x7c\xd7\x0e\x53\xcc\x54\x71\xe3\xda\x55\xe1\xcd\x33\x70\x83\x02\x9d\x61\x59\xfc\xc0\xd5\xe5\x2d\x45\x4b\xd9\x8b\x78\xea\xc5\xa8\xf5\xf4\x5b\x73\x9b\x8b\x21\xdc\x70\x81\xe1\x8a\x2d\xb8\x48\x73\x90\xb5\xc9\x2c\x93\x13\x49\x33\x41\xf4\x39\x7e\x55\x7c\xd1\x69\xd3\x6b\xf7\x79\x4b\x94\xb4\x45\x48\x6b\x74\x04\x5e\x4c\xee\xdb\x3c\xa8\x83\xa0\xc3\x7f\x6f\xd6\x04\xdb\xa0\x44\xc9\xb9\x5d\xce\x76\xa8\xb3\x91\xda\x90\x35\xf0\x8a\x2c\x0a\xbc\xe2\xff\xe8\xfa\x6f\x00\x00\x00\xff\xff\x72\x0d\x62\xe3\xe9\x25\x00\x00")

func assetsFilesRegisterEnHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsFilesRegisterEnHtml,
		"assets/files/register-en.html",
	)
}

func assetsFilesRegisterEnHtml() (*asset, error) {
	bytes, err := assetsFilesRegisterEnHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/files/register-en.html", size: 9705, mode: os.FileMode(438), modTime: time.Unix(1492198461, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/files/register-de.html": assetsFilesRegisterDeHtml,
	"assets/files/register-en.html": assetsFilesRegisterEnHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"files": &bintree{nil, map[string]*bintree{
			"register-de.html": &bintree{assetsFilesRegisterDeHtml, map[string]*bintree{}},
			"register-en.html": &bintree{assetsFilesRegisterEnHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

